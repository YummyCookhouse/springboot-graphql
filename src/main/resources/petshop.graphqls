type Query {
    pets: [Pet],
    pet(id: Int): Pet
}

type Mutation {
    saveDog(id:Int, name: String, age: Int, ownerId: Int, license: String) : Dog
    addPet(pet: PetInput): Pet
}

type Owner {
    name: String
    age: Int
    address: String
}

type Dog {
    id: Int
    type: Animal!
    name: String
    age: Int
    license: String
    owner: Owner
}

type Bird {
    id: Int
    type: Animal!
    name: String
    age: Int
    wings: Int
    owner: Owner
}

union Pet = Dog | Bird

input PetInput {
    id: Int
    type: Animal
    name: String
    age: Int
    ownerId: Int
    license: String
    wings: Int
}

enum Animal {
    DOG
    BIRD
}

schema {
    query: Query
    mutation: Mutation
}